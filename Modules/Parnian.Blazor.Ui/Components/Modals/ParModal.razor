<ParOverlay Id="@Id">
    @if (BackdropMode != ParBackdropMode.None)
    {
        <div @onclick="OnBackdropClick" class="par-modal-backdrop @(Show ? "show" : "hide")"></div>
    }

    <div class="par-modal-content @(Show ? "show" : "hide")">
        @ChildContent
    </div>
</ParOverlay>

@code {
    private bool _show;

    [Parameter]
    public bool Show
    {
        get => _show;
        set
        {
            _show = value;
            StateHasChanged();
        }
    }

    [Parameter] public EventCallback<bool> ShowChanged { get; set; }

    [Parameter] public RenderFragment ChildContent { get; set; } = default!;

    [Parameter] public ParBackdropMode BackdropMode { get; set; } = ParBackdropMode.Default;

    [Parameter] public string Id { get; set; } = Guid.NewGuid().ToString("N");

    protected override void OnAfterRender(bool firstRender)
    {
        Console.WriteLine(Id);
        base.OnAfterRender(firstRender);
        
    }


    private async Task OnBackdropClick()
    {
        if (BackdropMode == ParBackdropMode.Static)
        {
            return;
        }

        Show = false;
        await ShowChanged.InvokeAsync(Show);
        await InvokeAsync(StateHasChanged); // Trigger a re-render to start the animation
        
    }

}